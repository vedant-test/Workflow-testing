name: Add Required Reviewers

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  add-reviewers:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Generate GitHub App token
        id: github-app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
        
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
        
      - name: Get changed files of latest push
        id: changed-files
        run: |
          echo "changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs)" >> $GITHUB_OUTPUT
      
      - name: Execute script to add reviewers on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.github-app-token.outputs.token }}
          script: |
            const { execSync } = require('child_process');
            
            // get all the changed files
            const { commits } = context.payload.pull_request;
            console.log(`commits: `,commits);
            const file_names = execSync(`git diff --name-only HEAD HEAD~${commits}`).toString();
            const all_changed_files_paths = file_names.split('\n').filter(Boolean);
            console.log(`all_changed_files_paths: `,all_changed_files_paths);

            // get the changed files for the latest push
            const before = context.payload.before;
            const after = context.payload.after;
            console.log(`before: `,before);
            console.log(`after: `,after);
            const changed_files_paths = execSync(`git diff --name-only ${context.payload.before} ${context.payload.after}`).toString();
            console.log(`changed_files2: `,changed_files2);

            const required_approver_teams = new Set();
            const fs = require('fs');
            

            console.log(`required_approver_teams: `,required_approver_teams);

            github.pulls.removeReviewRequest({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              team_reviewers: ['infra']
            });

            if (required_approver_teams.size != 0) {
              github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                team_reviewers: Array.from(required_approver_teams)
              });
            }
